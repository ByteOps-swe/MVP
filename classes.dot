digraph "classes" {
rankdir=BT
charset="utf-8"
"MVP_prove.FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" [color="black", fontcolor="black", label=<{AdapterMisurazione|__misurazione<br ALIGN="LEFT"/>|__init__(misurazione: MisurazioneSalute)<br ALIGN="LEFT"/>to_json()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.CompositeWriter.CompositeWriter" [color="black", fontcolor="black", label=<{CompositeWriter|_writers : list<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>add_kafkaConfluent_writer(topic: str, host: str, port: int)<br ALIGN="LEFT"/>add_stdOut_writer()<br ALIGN="LEFT"/>add_writer(writer)<br ALIGN="LEFT"/>remove_writer(writer)<br ALIGN="LEFT"/>write(to_write)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Coordinate.Coordinate" [color="black", fontcolor="black", label=<{Coordinate|__latitude : float<br ALIGN="LEFT"/>__longitude : float<br ALIGN="LEFT"/>|__init__(latitude: float, longitude: float)<br ALIGN="LEFT"/>get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.DustPM10Incrementer.DustPM10Incrementer" [color="black", fontcolor="black", label=<{DustPM10Incrementer|__dust_type_naming : str<br ALIGN="LEFT"/>|__init__(dust_type_naming: str)<br ALIGN="LEFT"/>get_incrementation(misurazioni: List[Misurazione])<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.ProcessingAdapter.FaustMeasurement.FaustMeasurement" [color="black", fontcolor="black", label=<{FaustMeasurement|ID_sensore : str<br ALIGN="LEFT"/>cella : str<br ALIGN="LEFT"/>latitude : float<br ALIGN="LEFT"/>longitude : float<br ALIGN="LEFT"/>timestamp : str<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>value : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthAlgorithm.HealthAlgorithm" [color="black", fontcolor="black", label=<{HealthAlgorithm|<br ALIGN="LEFT"/>|<I>generate_new_health_score</I>(): MisurazioneSalute<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [color="black", fontcolor="black", label=<{HealthCalculator|__dstPm10Inc<br ALIGN="LEFT"/>__dtsPm10_measure_type_naming : str<br ALIGN="LEFT"/>__healthScore_measure_type_naming : str<br ALIGN="LEFT"/>__humidity_measure_type_naming : str<br ALIGN="LEFT"/>__listaMisurazioni<br ALIGN="LEFT"/>__lock : lock<br ALIGN="LEFT"/>__temperature_measure_type_naming : str<br ALIGN="LEFT"/>__tmpInc<br ALIGN="LEFT"/>__umdInc<br ALIGN="LEFT"/>|__calcola_incremento_dstPm10(cella: str, listaMisurazioni, dust_type_naming)<br ALIGN="LEFT"/>__calcola_incremento_tmp(cella: str, listaMisurazioni, temperature_measure_type_naming)<br ALIGN="LEFT"/>__calcola_incremento_umd(cella: str, listaMisurazioni, humidity_measure_type_naming)<br ALIGN="LEFT"/>__init__(temperature_measure_type_naming: str, humidity_measure_type_naming: str, dtsPm10_measure_type_naming: str, healthScore_measure_type_naming: str)<br ALIGN="LEFT"/>add_misurazione(timestamp, value, type_, latitude, longitude, ID_sensore, cella)<br ALIGN="LEFT"/>generate_new_health_score()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthCalculatorThread.HealthCalculatorThread" [color="black", fontcolor="black", label=<{HealthCalculatorThread|__data_to_generate : int<br ALIGN="LEFT"/>__frequency : float<br ALIGN="LEFT"/>__healthCalculator<br ALIGN="LEFT"/>__is_running : bool<br ALIGN="LEFT"/>__writers<br ALIGN="LEFT"/>|__init__(healthCalculator: HealthAlgorithm, writers: Writer, frequency: float, data_to_generate: int)<br ALIGN="LEFT"/>run(): None<br ALIGN="LEFT"/>stop(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.ProcessingAdapter.HealthModelProcessorAdapter.HealthModelProcessorAdapter" [color="black", fontcolor="black", label=<{HealthModelProcessorAdapter|healthCalculator<br ALIGN="LEFT"/>|__init__(healthCalculator: HealthCalculator)<br ALIGN="LEFT"/>process_measurement(measurement: FaustMeasurement)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" [color="black", fontcolor="black", label=<{HumidityIncrementer|__umidity_type_naming : str<br ALIGN="LEFT"/>__under_health_soglia : int<br ALIGN="LEFT"/>__upper_health_soglia : int<br ALIGN="LEFT"/>|__init__(upper_health_soglia: int, under_health_soglia: int, umidity_type_naming: str)<br ALIGN="LEFT"/>get_incrementation(misurazioni: List[Misurazione])<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [color="black", fontcolor="black", label=<{Incrementer|<br ALIGN="LEFT"/>|<I>get_incrementation</I>(misurazioni: List[Misurazione]): int<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" [color="black", fontcolor="black", label=<{KafkaConfluentAdapter|__producer<br ALIGN="LEFT"/>__topic : str<br ALIGN="LEFT"/>|__init__(topic: str, ip: str, port: int)<br ALIGN="LEFT"/>write_to_kafka(data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [color="black", fontcolor="black", label=<{KafkaTarget|<br ALIGN="LEFT"/>|<I>write_to_kafka</I>(data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" [color="black", fontcolor="black", label=<{KafkaWriter|__kafka_target<br ALIGN="LEFT"/>__lock<br ALIGN="LEFT"/>|__init__(kafka_target: KafkaTarget)<br ALIGN="LEFT"/>write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.ListaMisurazioni.ListaMisurazioni" [color="black", fontcolor="black", label=<{ListaMisurazioni|__list : List[Misurazione]<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>add_misurazione(timestamp, value, type_, latitude, longitude, ID_sensore, cella)<br ALIGN="LEFT"/>clear_list()<br ALIGN="LEFT"/>get_list_by_cella_and_type(cella: str, tipo_dato: str)<br ALIGN="LEFT"/>get_unique_celle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Misurazione.Misurazione" [color="black", fontcolor="black", label=<{Misurazione|__ID_sensore<br ALIGN="LEFT"/>__cella<br ALIGN="LEFT"/>__coordinates<br ALIGN="LEFT"/>__timestamp<br ALIGN="LEFT"/>__type<br ALIGN="LEFT"/>__value<br ALIGN="LEFT"/>|__init__(timestamp, value, type_, coordinate: Coordinate, ID_sensore, cella)<br ALIGN="LEFT"/>get_ID_sensore()<br ALIGN="LEFT"/>get_cella()<br ALIGN="LEFT"/>get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>get_timestamp()<br ALIGN="LEFT"/>get_type()<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.MisurazioneSalute.MisurazioneSalute" [color="black", fontcolor="black", label=<{MisurazioneSalute|__cella<br ALIGN="LEFT"/>__timestamp<br ALIGN="LEFT"/>__type<br ALIGN="LEFT"/>__value<br ALIGN="LEFT"/>|__init__(timestamp, value, type_, cella)<br ALIGN="LEFT"/>get_cella()<br ALIGN="LEFT"/>get_timestamp()<br ALIGN="LEFT"/>get_type()<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.ProcessingAdapter.FaustProcessor.Processor" [color="black", fontcolor="black", label=<{Processor|<br ALIGN="LEFT"/>|<I>process</I>(misurazione: FaustMeasurement): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.StdoutWriter.StdoutWriter" [color="black", fontcolor="black", label=<{StdoutWriter|__lock : lock<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" [color="black", fontcolor="black", label=<{TemperatureIncrementer|__temperature_type_naming : str<br ALIGN="LEFT"/>__under_health_soglia : int<br ALIGN="LEFT"/>__upper_health_soglia : int<br ALIGN="LEFT"/>|__init__(upper_health_soglia: int, under_health_soglia: int, temperature_type_naming: str)<br ALIGN="LEFT"/>get_incrementation(misurazioni: List[Misurazione]): int<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.Test.test_DustPM10Incrementer.TestDustPM10Incrementer" [color="black", fontcolor="black", label=<{TestDustPM10Incrementer|<br ALIGN="LEFT"/>|test_get_incrementation_multiple_measurements()<br ALIGN="LEFT"/>test_get_incrementation_no_measurements()<br ALIGN="LEFT"/>test_get_incrementation_single_measurement()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.Test.test_HealthCalculator.TestHealthCalculator" [color="black", fontcolor="black", label=<{TestHealthCalculator|calculator<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_add_misurazione()<br ALIGN="LEFT"/>test_generate_new_health_score()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.Test.test_HumidityIncrementer.TestHumidityIncrementer" [color="black", fontcolor="black", label=<{TestHumidityIncrementer|<br ALIGN="LEFT"/>|test_get_incrementation_above_threshold()<br ALIGN="LEFT"/>test_get_incrementation_below_threshold()<br ALIGN="LEFT"/>test_get_incrementation_no_measurements()<br ALIGN="LEFT"/>test_get_incrementation_within_threshold()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.Test.test_TemperatureIncrementer.TestTemperatureIncrementer" [color="black", fontcolor="black", label=<{TestTemperatureIncrementer|temp_incrementer<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>test_get_incrementation()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.Writable.Writable" [color="black", fontcolor="black", label=<{Writable|<br ALIGN="LEFT"/>|<I>to_json</I>(): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.Writer.Writer" [color="black", fontcolor="black", label=<{Writer|<br ALIGN="LEFT"/>|<I>write</I>(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.Writable.Writable" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthAlgorithm.HealthAlgorithm" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.DustPM10Incrementer.DustPM10Incrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.CompositeWriter.CompositeWriter" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.StdoutWriter.StdoutWriter" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.ProcessingAdapter.HealthModelProcessorAdapter.HealthModelProcessorAdapter" -> "MVP_prove.FaustProcessing.ProcessingAdapter.FaustProcessor.Processor" [arrowhead="empty", arrowtail="none"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" -> "MVP_prove.FaustProcessing.Test.test_HealthCalculator.TestHealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="calculator", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.DustPM10Incrementer.DustPM10Incrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__dstPm10Inc", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__umdInc", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__tmpInc", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" -> "MVP_prove.FaustProcessing.Test.test_TemperatureIncrementer.TestTemperatureIncrementer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="temp_incrementer", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.ListaMisurazioni.ListaMisurazioni" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__listaMisurazioni", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Coordinate.Coordinate" -> "MVP_prove.FaustProcessing.HealthStateModel.Misurazione.Misurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__coordinates", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.HealthAlgorithm.HealthAlgorithm" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculatorThread.HealthCalculatorThread" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__healthCalculator", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.MisurazioneSalute.MisurazioneSalute" -> "MVP_prove.FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__misurazione", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.Writer.Writer" -> "MVP_prove.FaustProcessing.HealthStateModel.HealthCalculatorThread.HealthCalculatorThread" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__writers", style="solid"];
"MVP_prove.FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" -> "MVP_prove.FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__kafka_target", style="solid"];
}
