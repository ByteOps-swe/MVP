digraph "classes" {
rankdir=BT
charset="utf-8"
"PythonSensorsSimulator.Model.AdapterMisurazione.AdapterMisurazione" [color="black", fontcolor="black", label=<{AdapterMisurazione|<br ALIGN="LEFT"/>|to_json()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.ChargingStationSimulator.ChargingStationSimulator" [color="black", fontcolor="black", label=<{ChargingStationSimulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.ComponentSimulatorThread.ComponentSimulatorThread" [color="black", fontcolor="black", label=<{ComponentSimulatorThread|<br ALIGN="LEFT"/>|<I>run</I>(): None<br ALIGN="LEFT"/><I>stop</I>(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.CompositeWriter.CompositeWriter" [color="black", fontcolor="black", label=<{CompositeWriter|<br ALIGN="LEFT"/>|add_kafkaConfluent_writer(topic: str, host, port)<br ALIGN="LEFT"/>add_list_writer()<br ALIGN="LEFT"/>add_stdOut_writer()<br ALIGN="LEFT"/>add_writer(writer)<br ALIGN="LEFT"/>remove_writer(writer)<br ALIGN="LEFT"/>write(to_write)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Coordinate.Coordinate" [color="black", fontcolor="black", label=<{Coordinate|<br ALIGN="LEFT"/>|get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.DustPM10Simulator.DustPM10Simulator" [color="black", fontcolor="black", label=<{DustPM10Simulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.EcologicalIslandSimulator.EcologicalIslandSimulator" [color="black", fontcolor="black", label=<{EcologicalIslandSimulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.ElectricalFaultSimulator.ElectricalFaultSimulator" [color="black", fontcolor="black", label=<{ElectricalFaultSimulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.HumiditySimulator.HumiditySimulator" [color="black", fontcolor="black", label=<{HumiditySimulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" [color="black", fontcolor="black", label=<{KafkaConfluentAdapter|<br ALIGN="LEFT"/>|write_to_kafka(data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [color="black", fontcolor="black", label=<{KafkaTarget|<br ALIGN="LEFT"/>|<I>write_to_kafka</I>(topic: str, data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.KafkaWriter.KafkaWriter" [color="black", fontcolor="black", label=<{KafkaWriter|<br ALIGN="LEFT"/>|write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.ListWriter.ListWriter" [color="black", fontcolor="black", label=<{ListWriter|<br ALIGN="LEFT"/>|get_data_list(): list<br ALIGN="LEFT"/>write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Misurazione.Misurazione" [color="black", fontcolor="black", label=<{Misurazione|<br ALIGN="LEFT"/>|get_ID_sensore()<br ALIGN="LEFT"/>get_cella()<br ALIGN="LEFT"/>get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>get_timestamp()<br ALIGN="LEFT"/>get_type()<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.SensorFactory.SensorFactory" [color="black", fontcolor="black", label=<{SensorFactory|<br ALIGN="LEFT"/>|create_charging_station_sensor(latitude: float, longitude: float, cella: str, probabilita_occupazione)<br ALIGN="LEFT"/>create_dust_PM10_sensor(latitude: float, longitude: float, cella: str, initial_value)<br ALIGN="LEFT"/>create_ecological_island_sensor(latitude: float, longitude: float, cella: str, initial_value)<br ALIGN="LEFT"/>create_eletrical_fault_sensor(latitude: float, longitude: float, cella: str, fault_probability)<br ALIGN="LEFT"/>create_humidity_sensor(latitude: float, longitude: float, cella: str, initial_value)<br ALIGN="LEFT"/>create_temperature_sensor(latitude: float, longitude: float, cella: str, initial_value)<br ALIGN="LEFT"/>create_water_presence_sensor(latitude: float, longitude: float, cella: str, soglia_rilevamento)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [color="black", fontcolor="black", label=<{Simulator|<br ALIGN="LEFT"/>|simulate(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.SimulatorExecutorFactory.SimulatorExecutorFactory" [color="black", fontcolor="black", label=<{SimulatorExecutorFactory|<br ALIGN="LEFT"/>|add_simulator(simulator: Simulator, writers: Writer, frequency: float, data_to_generate: int): 'SimulatorExecutorFactory'<br ALIGN="LEFT"/>run()<br ALIGN="LEFT"/>stop()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.SimulatorThread.SimulatorThread" [color="black", fontcolor="black", label=<{SimulatorThread|<br ALIGN="LEFT"/>|run(): None<br ALIGN="LEFT"/>stop(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.SimulatorThreadPool.SimulatorThreadPool" [color="black", fontcolor="black", label=<{SimulatorThreadPool|<br ALIGN="LEFT"/>|append_simulator(simulator)<br ALIGN="LEFT"/>run_all()<br ALIGN="LEFT"/>stop_all()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.StdoutWriter.StdoutWriter" [color="black", fontcolor="black", label=<{StdoutWriter|<br ALIGN="LEFT"/>|write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.TemperatureSimulator.TemperatureSimulator" [color="black", fontcolor="black", label=<{TemperatureSimulator|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.ThreadPoolAdapter.ThreadPoolExecutorAdapter.ThreadPoolExecutorAdapter" [color="black", fontcolor="black", label=<{ThreadPoolExecutorAdapter|<br ALIGN="LEFT"/>|map(func, iterable)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.ThreadPoolAdapter.ThreadPoolTarget.ThreadPoolTarget" [color="black", fontcolor="black", label=<{ThreadPoolTarget|<br ALIGN="LEFT"/>|<I>map</I>(func, iterable)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Simulators.WaterPresenceSensor.WaterPresenceSensor" [color="black", fontcolor="black", label=<{WaterPresenceSensor|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.Writable.Writable" [color="black", fontcolor="black", label=<{Writable|<br ALIGN="LEFT"/>|<I>to_json</I>(): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.Writers.Writer.Writer" [color="black", fontcolor="black", label=<{Writer|<br ALIGN="LEFT"/>|<I>write</I>(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"PythonSensorsSimulator.Model.AdapterMisurazione.AdapterMisurazione" -> "PythonSensorsSimulator.Model.Writers.Writable.Writable" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.SimulatorExecutorFactory.SimulatorExecutorFactory" -> "PythonSensorsSimulator.Model.ComponentSimulatorThread.ComponentSimulatorThread" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.SimulatorThread.SimulatorThread" -> "PythonSensorsSimulator.Model.ComponentSimulatorThread.ComponentSimulatorThread" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.ChargingStationSimulator.ChargingStationSimulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.DustPM10Simulator.DustPM10Simulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.EcologicalIslandSimulator.EcologicalIslandSimulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.ElectricalFaultSimulator.ElectricalFaultSimulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.HumiditySimulator.HumiditySimulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.TemperatureSimulator.TemperatureSimulator" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Simulators.WaterPresenceSensor.WaterPresenceSensor" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.ThreadPoolAdapter.ThreadPoolExecutorAdapter.ThreadPoolExecutorAdapter" -> "PythonSensorsSimulator.Model.ThreadPoolAdapter.ThreadPoolTarget.ThreadPoolTarget" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Writers.CompositeWriter.CompositeWriter" -> "PythonSensorsSimulator.Model.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Writers.KafkaWriter.KafkaWriter" -> "PythonSensorsSimulator.Model.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Writers.ListWriter.ListWriter" -> "PythonSensorsSimulator.Model.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Writers.StdoutWriter.StdoutWriter" -> "PythonSensorsSimulator.Model.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" -> "PythonSensorsSimulator.Model.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [arrowhead="empty", arrowtail="none"];
"PythonSensorsSimulator.Model.SimulatorThreadPool.SimulatorThreadPool" -> "PythonSensorsSimulator.Model.SimulatorExecutorFactory.SimulatorExecutorFactory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__simulator_executor", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Coordinate.Coordinate" -> "PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__coordinate", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Coordinate.Coordinate" -> "PythonSensorsSimulator.Model.Simulators.Misurazione.Misurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__coordinates", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Misurazione.Misurazione" -> "PythonSensorsSimulator.Model.AdapterMisurazione.AdapterMisurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__misurazione", style="solid"];
"PythonSensorsSimulator.Model.Simulators.Simulator.Simulator" -> "PythonSensorsSimulator.Model.SimulatorThread.SimulatorThread" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__simulator", style="solid"];
"PythonSensorsSimulator.Model.ThreadPoolAdapter.ThreadPoolTarget.ThreadPoolTarget" -> "PythonSensorsSimulator.Model.SimulatorThreadPool.SimulatorThreadPool" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__thread_pool_adapter", style="solid"];
"PythonSensorsSimulator.Model.Writers.Writer.Writer" -> "PythonSensorsSimulator.Model.SimulatorThread.SimulatorThread" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__writers", style="solid"];
"PythonSensorsSimulator.Model.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" -> "PythonSensorsSimulator.Model.Writers.KafkaWriter.KafkaWriter" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__kafka_target", style="solid"];
}
