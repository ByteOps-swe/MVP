digraph "classes" {
rankdir=BT
charset="utf-8"
"FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" [color="black", fontcolor="black", label=<{AdapterMisurazione|__misurazione<br ALIGN="LEFT"/>|__init__(misurazione: MisurazioneSalute)<br ALIGN="LEFT"/>to_json()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.CompositeWriter.CompositeWriter" [color="black", fontcolor="black", label=<{CompositeWriter|_writers : list<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>add_kafkaConfluent_writer(topic: str, host, port)<br ALIGN="LEFT"/>add_list_writer()<br ALIGN="LEFT"/>add_stdOut_writer()<br ALIGN="LEFT"/>add_writer(writer)<br ALIGN="LEFT"/>remove_writer(writer)<br ALIGN="LEFT"/>write(to_write)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Coordinate.Coordinate" [color="black", fontcolor="black", label=<{Coordinate|__latitude : float<br ALIGN="LEFT"/>__longitude : float<br ALIGN="LEFT"/>|__init__(latitude: float, longitude: float)<br ALIGN="LEFT"/>get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [color="black", fontcolor="black", label=<{HealthCalculator|__healthScore_measure_type_naming : str<br ALIGN="LEFT"/>__humidity_measure_type_naming : str<br ALIGN="LEFT"/>__listaMisurazioni<br ALIGN="LEFT"/>__lock : lock<br ALIGN="LEFT"/>__temperature_measure_type_naming : str<br ALIGN="LEFT"/>__tmpInc<br ALIGN="LEFT"/>__umdInc<br ALIGN="LEFT"/>|__calcola_incremento_tmp(listaMisurazioni, temperature_measure_type_naming)<br ALIGN="LEFT"/>__calcola_incremento_umd(listaMisurazioni, humidity_measure_type_naming)<br ALIGN="LEFT"/>__init__(temperature_measure_type_naming: str, humidity_measure_type_naming: str, healthScore_measure_type_naming: str)<br ALIGN="LEFT"/>add_misurazione(timestamp, value, type_, latitude, longitude, ID_sensore, cella)<br ALIGN="LEFT"/>generate_new_health_score()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.HealthCalculatorThread.HealthCalculatorThread" [color="black", fontcolor="black", label=<{HealthCalculatorThread|__data_to_generate : Optional[int]<br ALIGN="LEFT"/>__frequency : float<br ALIGN="LEFT"/>__healthCalculator : Optional[HealthCalculator]<br ALIGN="LEFT"/>__is_running : bool<br ALIGN="LEFT"/>__writers<br ALIGN="LEFT"/>|__init__(healthCalculator: HealthCalculator, writers: Writer, frequency: float, data_to_generate: Optional[int])<br ALIGN="LEFT"/>run(): None<br ALIGN="LEFT"/>stop(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" [color="black", fontcolor="black", label=<{HumidityIncrementer|__umidity_type_naming : str<br ALIGN="LEFT"/>__under_health_soglia : int<br ALIGN="LEFT"/>__upper_health_soglia : int<br ALIGN="LEFT"/>|__init__(upper_health_soglia: int, under_health_soglia: int, umidity_type_naming: str)<br ALIGN="LEFT"/>get_incrementation(misurazioni: List[Misurazione])<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [color="black", fontcolor="black", label=<{Incrementer|<br ALIGN="LEFT"/>|<I>get_incrementation</I>(misurazioni: List[Misurazione]): int<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" [color="black", fontcolor="black", label=<{KafkaConfluentAdapter|__producer : NoneType<br ALIGN="LEFT"/>__topic : str<br ALIGN="LEFT"/>|__configure_producer(ip: str, port: str): None<br ALIGN="LEFT"/>__init__(topic: str, ip: str, port: str)<br ALIGN="LEFT"/>write_to_kafka(data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [color="black", fontcolor="black", label=<{KafkaTarget|<br ALIGN="LEFT"/>|<I>write_to_kafka</I>(topic: str, data: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" [color="black", fontcolor="black", label=<{KafkaWriter|__kafka_target : Optional[KafkaTarget]<br ALIGN="LEFT"/>__lock<br ALIGN="LEFT"/>|__init__(kafka_target: KafkaTarget)<br ALIGN="LEFT"/>write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.ListaMisurazioni.ListaMisurazioni" [color="black", fontcolor="black", label=<{ListaMisurazioni|__list : List[Misurazione]<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>add_misurazione(timestamp, value, type_, latitude, longitude, ID_sensore, cella)<br ALIGN="LEFT"/>clear_list()<br ALIGN="LEFT"/>get_list_by_cella_and_type(cella: str, tipo_dato: str)<br ALIGN="LEFT"/>get_unique_celle()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.processing.Measurement" [color="black", fontcolor="black", label=<{Measurement|ID_sensore : str<br ALIGN="LEFT"/>cella : str<br ALIGN="LEFT"/>latitude : float<br ALIGN="LEFT"/>longitude : float<br ALIGN="LEFT"/>timestamp : str<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>value : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Misurazione.Misurazione" [color="black", fontcolor="black", label=<{Misurazione|__ID_sensore<br ALIGN="LEFT"/>__cella<br ALIGN="LEFT"/>__coordinates<br ALIGN="LEFT"/>__timestamp<br ALIGN="LEFT"/>__type<br ALIGN="LEFT"/>__value<br ALIGN="LEFT"/>|__init__(timestamp, value, type_, coordinate: Coordinate, ID_sensore, cella)<br ALIGN="LEFT"/>get_ID_sensore()<br ALIGN="LEFT"/>get_cella()<br ALIGN="LEFT"/>get_latitude()<br ALIGN="LEFT"/>get_longitude()<br ALIGN="LEFT"/>get_timestamp()<br ALIGN="LEFT"/>get_type()<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.MisurazioneSalute.MisurazioneSalute" [color="black", fontcolor="black", label=<{MisurazioneSalute|__cella<br ALIGN="LEFT"/>__timestamp<br ALIGN="LEFT"/>__type<br ALIGN="LEFT"/>__value<br ALIGN="LEFT"/>|__init__(timestamp, value, type_, cella)<br ALIGN="LEFT"/>get_cella()<br ALIGN="LEFT"/>get_timestamp()<br ALIGN="LEFT"/>get_type()<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.StdoutWriter.StdoutWriter" [color="black", fontcolor="black", label=<{StdoutWriter|__lock : lock<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>write(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" [color="black", fontcolor="black", label=<{TemperatureIncrementer|__temperature_type_naming : str<br ALIGN="LEFT"/>__under_health_soglia : int<br ALIGN="LEFT"/>__upper_health_soglia : int<br ALIGN="LEFT"/>|__init__(upper_health_soglia: int, under_health_soglia: int, temperature_type_naming: str)<br ALIGN="LEFT"/>get_incrementation(misurazioni: List[Misurazione])<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.Writable.Writable" [color="black", fontcolor="black", label=<{Writable|<br ALIGN="LEFT"/>|<I>to_json</I>(): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.Writers.Writer.Writer" [color="black", fontcolor="black", label=<{Writer|<br ALIGN="LEFT"/>|<I>write</I>(to_write: Writable): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" -> "FaustProcessing.HealthStateModel.Writers.Writable.Writable" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" -> "FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" -> "FaustProcessing.HealthStateModel.Incrementers.Incrementer.Incrementer" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Writers.CompositeWriter.CompositeWriter" -> "FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" -> "FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Writers.StdoutWriter.StdoutWriter" -> "FaustProcessing.HealthStateModel.Writers.Writer.Writer" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaConfluentAdapter.KafkaConfluentAdapter" -> "FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" [arrowhead="empty", arrowtail="none"];
"FaustProcessing.HealthStateModel.Incrementers.HumidityIncrementer.HumidityIncrementer" -> "FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__umdInc", style="solid"];
"FaustProcessing.HealthStateModel.Incrementers.TemperatureIncrementer.TemperatureIncrementer" -> "FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__tmpInc", style="solid"];
"FaustProcessing.HealthStateModel.ListaMisurazioni.ListaMisurazioni" -> "FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__listaMisurazioni", style="solid"];
"FaustProcessing.HealthStateModel.Coordinate.Coordinate" -> "FaustProcessing.HealthStateModel.Misurazione.Misurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__coordinates", style="solid"];
"FaustProcessing.HealthStateModel.HealthCalculator.HealthCalculator" -> "FaustProcessing.HealthStateModel.HealthCalculatorThread.HealthCalculatorThread" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__healthCalculator", style="solid"];
"FaustProcessing.HealthStateModel.MisurazioneSalute.MisurazioneSalute" -> "FaustProcessing.HealthStateModel.AdapterMisurazioneSalute.AdapterMisurazione" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__misurazione", style="solid"];
"FaustProcessing.HealthStateModel.Writers.kafkaAdapter.KafkaTarget.KafkaTarget" -> "FaustProcessing.HealthStateModel.Writers.KafkaWriter.KafkaWriter" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="__kafka_target", style="solid"];
}
